my_mean<-sum(c(4,5,10))/length(c(4,5,10))
my_mean(c(4,5,10))
bye()
swirl()
library(swirl)
swirl()
d1<-Sys.date()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time()-t1
difftime(Sys.time(),t1,units=
difftime(Sys.time(),t1,units=
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist
plot(x=cars$speed,y=cars$dist)
plot(speed~dist,cars)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
boxplot()
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
swirl()
install_course("The R Programming Environment")
install_course("Regression Models")
install_course("Getting and Cleaning Data")
install_course("Statistical Inference")
install_course("Advanced Programming")
install_course("Advanced R Programming")
swirl()
plot(child~parent,galton)
plot(jitter(child,4)~parent,galton)
regrline<-lm(child~parent,galton)
abline(regrline,lwd=3,col=)
abline(regrline,lwd=3,col='red')
summary(regrline)
fit<-lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
fit$coef[1]
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
View(galton)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(est(fit))
varEst<-var(est
varEst<-var(est)
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varEst+varRes)
efit<-lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(attenu$mag)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
file.choose()
read.csv<-"C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CA.xlsx"
read.csv("C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CA.xlsx")
library(dplyr)
library(ggplot2)
rm(list=ls())
file.choose()
CONUS<-"C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CONUS.xlsx"
rm(list=ls())
CONUS<-read.csv("C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CONUS.xlsx")
View(CONUS)
set.wd()
setwd
setwd()
setwd("C:\Users\Owner\Documents\CDL\EVT_Percentages\EVT_Percentages\")
setwd(C:\Users\Owner\Documents\CDL\EVT_Percentages\EVT_Percentages\)
setwd("C:\Users\Owner\Documents\CDL\EVT_Percentages\EVT_Percentages")
file.choose()
CONUS<-read.csv("C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CONUS.csv")
glimpse(CONUS)
CONUS.TNC<-read.csv("C:\\Users\\Owner\\Documents\\CDL\\EVT_Percentages\\EVT_Percentages\\US200EVT_CONUS_TNC.csv")
View(CONUS)
?match
CONUS %in% CONUS.TNC
match(CONUS,CONUS.TNC)
View(CONUS.TNC)
View(CONUS)
wd()
getwd()
setwd( "C:/Users/Owner/Documents/CDL")
getwd()
#Start a project
wflow_start("EVTWorkflow")
setwd("C:/Users/Owner/Documents/CDL")
#Start a project
wflow_start("EVTWorkflow")
library(workflowr)
#Start a project
wflow_start("EVTWorkflow")
getwd()
#CA first
wflow_open("analysis/CAanalysis")
#CA first
wflow_open("analysis/CAanalysis.Rmd")
evt_ca <- read.csv("./data/US200EVT_CA.csv")
tnc_ca <- read.csv("./data/US200EVT_CA_TNC.csv")
evt_ca <- read.csv("./data/US200EVT_CA.csv")
tnc_ca <- read.csv("./data/US200EVT_CA_TNC.csv")
head(evt_ca)
head(tnc_ca)
glimpse(evt_ca)
library(tidyverse)
glimpse(evt_ca)
library(tidyverse)
library(ggplot2)
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
evt_ca<-evt_ca%>%
rename(COUNT_CA=COUNT)%>%
arrange(desc(COUNT_CA))%>%
mutate(PERCENT_CA=round(COUNT_CA/sum(COUNT_CA)*100,4),
RANK_CA=1:pull(tally(evt_ca)))
tnc_ca<-tnc_ca%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_ca)))
ca <- left_join(evt_ca, tnc_ca) %>%
replace(is.na(.), 0)
ca_notowned<-ca%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
ca_tennotowned<-slice(ca_notowned,1:10)
orderca_tennotowned<-ca_tennotowned%>%
arrange(desc(PERCENT_CA))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
View(ca_tennotowned)
#Now group by EVT_PHYS
phys_ca_notowned<-ca_notowned %>% group_by(EVT_PHYS)%>%
summarise(PHYS_PERCENT_CA = sum(PERCENT_CA))%>%
arrange(desc(PHYS_PERCENT_CA))
View(phys_ca_notowned)
getwd()
wflow_open("analysis/CONUSanalysis.Rmd")
rm(list=ls())
evt_ca <- read.csv("./data/US200EVT_CA.csv")
tnc_ca <- read.csv("./data/US200EVT_CA_TNC.csv")
library(knitr)
kable(evt_ca[1:5, ], caption="EVT data for all of California (first five lines)")
kable(tnc_ca[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
#Rename count columns and add percent and rank columns
evt_ca<-evt_ca%>%
rename(COUNT_CA=COUNT)%>%
arrange(desc(COUNT_CA))%>%
mutate(PERCENT_CA=round(COUNT_CA/sum(COUNT_CA)*100,4),
RANK_CA=1:pull(tally(evt_ca)))
tnc_ca<-tnc_ca%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_ca)))
#join the two data frames
ca <- left_join(evt_ca, tnc_ca) %>%
replace(is.na(.), 0)
#Filter this data so that we only have the EVTs in CA not owned by TNC
ca_notowned<-ca%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
#Grab the 10 largest EVTs not owned
ca_tennotowned<-slice(ca_notowned,1:10)
#Order the top 10 so that they are arranged by size in our plot rather than alphabetically
orderca_tennotowned<-ca_tennotowned%>%
arrange(desc(PERCENT_CA))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
#Get rid of space in "Sparsely Vegetated" so we can assign colors manually
library(stringr)
EVT_PHYSNS<-str_replace(orderca_tennotowned$EVT_PHYS," ","")
orderca_tennotowned$EVT_PHYSNS<-EVT_PHYSNS
orderca_tennotowned=subset(orderca_tennotowned, select=-EVT_PHYS)
rm(list=ls())
---
title: "CONUSanalysis"
author: "julesolson"
date: "2021-02-21"
output: workflowr::wflow_html
editor_options:
chunk_output_type: console
---
# Analysis of EVTs in the contuguous United States which are not owned by TNC
## The Data
**215** EVTs exist in CA, of which **171** are represented in TNC's ownership
```{r echo=FALSE, warning=FALSE}
evt_conus <- read.csv("./data/US200EVT_CONUS.csv")
tnc_conus <- read.csv("./data/US200EVT_CONUS_TNC.csv")
library(knitr)
kable(evt_conus[1:5, ], caption="EVT data for all of the contiguous United States (first five lines)")
kable(tnc_conus[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
```
##Most Prevalent Unrepresented EVTs
Identifying the EVTs not represented in TNC's ownership which make up the largest proportion of the contiguous United States
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
#Rename count columns and add percent and rank columns
evt_conus<-evt_conus%>%
rename(COUNT_CONUS=COUNT)%>%
arrange(desc(COUNT_CONUS))%>%
mutate(PERCENT_CONUS=round(COUNT_CONUS/sum(COUNT_CONUS)*100,4),
RANK_CONUS=1:pull(tally(evt_conus)))
tnc_conus<-tnc_conus%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_conus)))
#join the two data frames
conus <- left_join(evt_conus, tnc_conus) %>%
replace(is.na(.), 0)
#Filter this data so that we only have the EVTs in CA not owned by TNC
conus_notowned<-conus%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
#Grab the 10 largest EVTs not owned
conus_tennotowned<-slice(conus_notowned,1:10)
#Order the top 10 so that they are arranged by size in our plot rather than alphabetically
orderconus_tennotowned<-conus_tennotowned%>%
arrange(desc(PERCENT_CONUS))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
#Get rid of space in "Sparsely Vegetated" so we can assign colors manually
library(stringr)
EVT_PHYSNS<-str_replace(orderconus_tennotowned$EVT_PHYS," ","")
orderconus_tennotowned$EVT_PHYSNS<-EVT_PHYSNS
orderconus_tennotowned=subset(orderconus_tennotowned, select=-EVT_PHYS)
```
```{r echo=FALSE, warning=FALSE, fig.width=9}
ggplot(orderconus_tennotowned, aes(x=EVT_NAME, y=PERCENT_CONUS, fill=EVT_PHYSNS))+
geom_bar(stat='identity',position='dodge')+
coord_flip()+
labs(x="EVT",y="Percent of CONUS",title="Top 10 EVT's in CONUS not owned by TNC")+
scale_fill_manual(values=c(Conifer="olivedrab4", Riparian="navy", Grassland="navajowhite1", Shrubland="orange2", Hardwood= "orange4", SparselyVegetated="olivedrab1"))
```
##Unrepresented EVT PHYS Types
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Now group all unowned EVTs by EVT_PHYS
phys_conus_notowned<-conus_notowned %>% group_by(EVT_PHYS)%>%
summarise(PHYS_PERCENT_CONUS = sum(PERCENT_CONUS))%>%
arrange(desc(PHYS_PERCENT_CONUS))
#Remove unwanted PHYS types
phys_conus_notowned<-phys_conus_notowned%>%
filter(EVT_PHYS!='Agricultural' & EVT_PHYS!='Developed' & EVT_PHYS!='Snow-Ice' & EVT_PHYS!='Exotic Herbaceous' & EVT_PHYS!= 'Exotic Tree-Shrub')
```
```{r echo=FALSE, warning= FALSE, fig.width=9}
ggplot(phys_conus_notowned, aes(x=EVT_PHYS,y=PHYS_PERCENT_CONUS))+
geom_bar(stat='identity', position='dodge')+
xlab("EVT Phys Type")+
ylab("Percent of CONUS Area")+
ggtitle("Percent Areas of EVT PHYS Types in CONUS not owned by TNC")+
theme_bw()
```
rm(list=ls())
wflow_open("analysis/MALanalysis.Rmd")
---
title: "MALanalysis"
author: "julesolson"
date: "2021-02-21"
output: workflowr::wflow_html
editor_options:
chunk_output_type: console
---
# Analysis of EVTs in California which are not owned by TNC
## The Data
**215** EVTs exist in CA, of which **171** are represented in TNC's ownership
```{r echo=FALSE, results='asis', warning=FALSE}
evt_ca <- read.csv("./data/US200EVT_CA.csv")
tnc_ca <- read.csv("./data/US200EVT_CA_TNC.csv")
library(knitr)
kable(evt_ca[1:5, ], caption="EVT data for all of California (first five lines)")
kable(tnc_ca[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
```
##Most Prevalent Unrepresented EVTs
Identifying the EVTs not represented in TNC's ownership which make up the largest proportion of CA
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
#Rename count columns and add percent and rank columns
evt_ca<-evt_ca%>%
rename(COUNT_CA=COUNT)%>%
arrange(desc(COUNT_CA))%>%
mutate(PERCENT_CA=round(COUNT_CA/sum(COUNT_CA)*100,4),
RANK_CA=1:pull(tally(evt_ca)))
tnc_ca<-tnc_ca%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_ca)))
#join the two data frames
ca <- left_join(evt_ca, tnc_ca) %>%
replace(is.na(.), 0)
#Filter this data so that we only have the EVTs in CA not owned by TNC
ca_notowned<-ca%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
#Grab the 10 largest EVTs not owned
ca_tennotowned<-slice(ca_notowned,1:10)
#Order the top 10 so that they are arranged by size in our plot rather than alphabetically
orderca_tennotowned<-ca_tennotowned%>%
arrange(desc(PERCENT_CA))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
#Get rid of space in "Sparsely Vegetated" so we can assign colors manually
library(stringr)
EVT_PHYSNS<-str_replace(orderca_tennotowned$EVT_PHYS," ","")
orderca_tennotowned$EVT_PHYSNS<-EVT_PHYSNS
orderca_tennotowned=subset(orderca_tennotowned, select=-EVT_PHYS)
```
```{r echo=FALSE, warning=FALSE, fig.width=9}
ggplot(orderca_tennotowned, aes(x=EVT_NAME, y=PERCENT_CA, fill=EVT_PHYSNS))+
geom_bar(stat='identity',position='dodge')+
coord_flip()+
labs(x="EVT",y="Percent of CA",title="Top 10 EVT's in CA not owned by TNC")+
scale_fill_manual(values=c(Conifer="olivedrab4", Riparian="navy", Grassland="navajowhite1", Shrubland="orange2", Hardwood= "orange4", SparselyVegetated="olivedrab1"))
```
##Unrepresented EVT PHYS Types
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Now group all unowned EVTs by EVT_PHYS
phys_ca_notowned<-ca_notowned %>% group_by(EVT_PHYS)%>%
summarise(PHYS_PERCENT_CA = sum(PERCENT_CA))%>%
arrange(desc(PHYS_PERCENT_CA))
```
```{r echo=FALSE, warning= FALSE, fig.width=9}
ggplot(phys_ca_notowned, aes(x=EVT_PHYS,y=PHYS_PERCENT_CA))+
geom_bar(stat='identity', position='dodge')+
xlab("EVT Phys Type")+
ylab("Percent of CA Area")+
ggtitle("Percent Areas of EVT PHYS Types in CA not owned by TNC")+
theme_bw()
```
---
title: "MALanalysis"
author: "julesolson"
date: "2021-02-21"
output: workflowr::wflow_html
editor_options:
chunk_output_type: console
---
# Analysis of EVTs in MAL which are not owned by TNC
## The Data
**215** EVTs exist in MAL, of which **171** are represented in TNC's ownership
```{r echo=FALSE, results='asis', warning=FALSE}
evt_mal <- read.csv("./data/US200EVT_MAL.csv")
tnc_mal <- read.csv("./data/US200EVT_MAL_TNC.csv")
library(knitr)
kable(evt_mal[1:5, ], caption="EVT data for all of MAL (first five lines)")
kable(tnc_mal[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
```
##Most Prevalent Unrepresented EVTs
Identifying the EVTs not represented in TNC's ownership which make up the largest proportion of MAL
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
#Rename count columns and add percent and rank columns
evt_mal<-evt_mal%>%
rename(COUNT_MAL=COUNT)%>%
arrange(desc(COUNT_MAL))%>%
mutate(PERCENT_MAL=round(COUNT_MAL/sum(COUNT_MAL)*100,4),
RANK_MAL=1:pull(tally(evt_mal)))
tnc_mal<-tnc_mal%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_mal)))
#join the two data frames
mal <- left_join(evt_mal, tnc_mal) %>%
replace(is.na(.), 0)
#Filter this data so that we only have the EVTs in CA not owned by TNC
mal_notowned<-mal%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
#Grab the 10 largest EVTs not owned
mal_tennotowned<-slice(mal_notowned,1:10)
#Order the top 10 so that they are arranged by size in our plot rather than alphabetically
ordermal_tennotowned<-mal_tennotowned%>%
arrange(desc(PERCENT_MAL))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
#Get rid of space in "Sparsely Vegetated" so we can assign colors manually
library(stringr)
EVT_PHYSNS<-str_replace(ordermal_tennotowned$EVT_PHYS," ","")
ordermal_tennotowned$EVT_PHYSNS<-EVT_PHYSNS
ordermal_tennotowned=subset(ordermal_tennotowned, select=-EVT_PHYS)
```
```{r echo=FALSE, warning=FALSE, fig.width=9}
ggplot(ordermal_tennotowned, aes(x=EVT_NAME, y=PERCENT_MAL, fill=EVT_PHYSNS))+
geom_bar(stat='identity',position='dodge')+
coord_flip()+
labs(x="EVT",y="Percent of MAL",title="Top 10 EVT's in MAL not owned by TNC")+
scale_fill_manual(values=c(Conifer="olivedrab4", Riparian="navy", Grassland="navajowhite1", Shrubland="orange2", Hardwood= "orange4", SparselyVegetated="olivedrab1"))
```
##Unrepresented EVT PHYS Types
```{r echo=FALSE, warning=FALSE, include=FALSE}
#Now group all unowned EVTs by EVT_PHYS
phys_mal_notowned<-mal_notowned %>% group_by(EVT_PHYS)%>%
summarise(PHYS_PERCENT_MAL = sum(PERCENT_MAL))%>%
arrange(desc(PHYS_PERCENT_MAL))
#Remove unwanted PHYS types
phys_mal_notowned<-phys_mal_notowned%>%
filter(EVT_PHYS!='Agricultural' & EVT_PHYS!='Developed' & EVT_PHYS!='Snow-Ice' & EVT_PHYS!='Exotic Herbaceous' & EVT_PHYS!= 'Exotic Tree-Shrub')
```
```{r echo=FALSE, warning= FALSE, fig.width=9}
ggplot(phys_mal_notowned, aes(x=EVT_PHYS,y=PHYS_PERCENT_MAL))+
geom_bar(stat='identity', position='dodge')+
xlab("EVT Phys Type")+
ylab("Percent of MAL Area")+
ggtitle("Percent Areas of EVT PHYS Types in MAL not owned by TNC")+
theme_bw()
```
rm(list=ls())
evt_mal <- read.csv("./data/US200EVT_MAL.csv")
tnc_mal <- read.csv("./data/US200EVT_MAL_TNC.csv")
library(knitr)
kable(evt_mal[1:5, ], caption="EVT data for all of MAL (first five lines)")
kable(tnc_mal[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
#Processing data for the Top 10 graph
library(tidyverse)
library(ggplot2)
evt_mal<-evt_mal%>%
rename(COUNT_MAL=COUNT)%>%
arrange(desc(COUNT_MAL))%>%
mutate(PERCENT_MAL=round(COUNT_MAL/sum(COUNT_MAL)*100,4),
RANK_MAL=1:pull(tally(evt_mal)))
tnc_mal<-tnc_mal%>%
rename(COUNT_TNC=COUNT)%>%
arrange(desc(COUNT_TNC))%>%
mutate(PERCENT_TNC=round(COUNT_TNC/sum(COUNT_TNC)*100,4),
RANK_TNC=1:pull(tally(tnc_mal)))
#join the two data frames
mal <- left_join(evt_mal, tnc_mal) %>%
replace(is.na(.), 0)
#Filter this data so that we only have the EVTs in CA not owned by TNC
mal_notowned<-mal%>%
filter(COUNT_TNC==0)%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
#Grab the 10 largest EVTs not owned
mal_tennotowned<-slice(mal_notowned,1:10)
#Order the top 10 so that they are arranged by size in our plot rather than alphabetically
ordermal_tennotowned<-mal_tennotowned%>%
arrange(desc(PERCENT_MAL))%>%
mutate(EVT_NAME = factor(EVT_NAME, levels=EVT_NAME))
#Get rid of space in "Sparsely Vegetated" so we can assign colors manually
library(stringr)
EVT_PHYSNS<-str_replace(ordermal_tennotowned$EVT_PHYS," ","")
ordermal_tennotowned$EVT_PHYSNS<-EVT_PHYSNS
ordermal_tennotowned=subset(ordermal_tennotowned, select=-EVT_PHYS)
ggplot(ordermal_tennotowned, aes(x=EVT_NAME, y=PERCENT_MAL, fill=EVT_PHYSNS))+
geom_bar(stat='identity',position='dodge')+
coord_flip()+
labs(x="EVT",y="Percent of MAL",title="Top 10 EVT's in MAL not owned by TNC")+
scale_fill_manual(values=c(Conifer="olivedrab4", Riparian="navy", Grassland="navajowhite1", Shrubland="orange2", Hardwood= "orange4", SparselyVegetated="olivedrab1"))
View(mal_tennotowned)
#Filter this data so that we only have the EVTs in CA not owned by TNC
mal_notowned<-mal%>%
filter(COUNT_TNC==0 & EVT_PHYS!='Agricultural' & EVT_PHYS!='Developed' & EVT_PHYS!='Snow-Ice' & EVT_PHYS!='Exotic Herbaceous' & EVT_PHYS!= 'Exotic Tree-Shrub')%>%
select(-COUNT_TNC,-PERCENT_TNC,-RANK_TNC)
wflow_open("analysis/NEYanalysis.Rmd")
rm(list=ls())
evt_ney <- read.csv("./data/US200EVT_NEY.csv")
tnc_ney <- read.csv("./data/US200EVT_NEY_TNC.csv")
library(knitr)
kable(evt_ney[1:5, ], caption="EVT data for all of NEY (first five lines)")
kable(tnc_ney[1:5, ], caption="EVT data for EVTs owned by The Nature Conservancy (first five lines)")
#take a look
wflow_build()
wflow_view()
